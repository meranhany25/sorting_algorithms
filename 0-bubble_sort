#include "sort.h"

/**
 * bubble_sort - Sorts an array of integers in ascending order
 * using the Bubble Sort algorithm.
 * @array: The array to be sorted.
 * @size: Number of elements in @array.
 *
 * This implementation optimizes the number of passes by decrementing
 * the inner loop counter (`j`) each iteration. Additionally, it
 * tracks whether any swaps were made (using `flag`) to stop sorting
 * as soon as the array is fully ordered.
 */

void bubble_sort(int *array, size_t size)
{
    size_t i = 0, j = size - 1;
    int tmp;
    bool flag = true;

    if (!array || size < 2)
        return;

    while (flag)
    {
        flag = false;
        i = 0;

        while (i < size - 1 - j)
        {
            if (array[i] > array[i + 1])
            {
                tmp = array[i];
                array[i] = array[i + 1];
                array[i + 1] = tmp;
                print_array(array, size);
                flag = true;
            }
            i++;
        }

        j--;
    }
}
